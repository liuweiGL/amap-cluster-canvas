{"version":3,"file":"amap-cluster-canvas.test.js","sources":["../src/canvas.js","../src/clusterItem.js","../src/utils.js","../src/cluster.js","../test/index.js"],"sourcesContent":["/**\r\n * 为点聚合提供画布\r\n * @param options\r\n * {\r\n *   map: 地图,\r\n *   zIndex: 图层zIndex,\r\n *   visible: 是否可见\r\n * }\r\n */\r\nclass Canvas {\r\n  constructor(options) {\r\n    this.layer = null\r\n    this.hoverCanvas = null\r\n    this.hoverCanvasCtx = null\r\n    this.clusterCanvas = null\r\n    this.clusterCanvasCxt = null\r\n    this.options = options\r\n    this._init()\r\n  }\r\n  _init() {\r\n    const {\r\n      options: {\r\n        map,\r\n        visible,\r\n        zIndex\r\n      }\r\n    } = this\r\n    const container = document.createElement('div')\r\n    // 绘制聚合点\r\n    const clusterCanvas = document.createElement('canvas')\r\n    clusterCanvas.style.position = 'absolute'\r\n    // hover状态下的点绘制\r\n    const hoverCanvas = document.createElement('canvas')\r\n    hoverCanvas.style.position = 'absolute'\r\n    container.appendChild(clusterCanvas)\r\n    container.appendChild(hoverCanvas)\r\n    this.clusterCanvas = clusterCanvas\r\n    this.hoverCanvas = hoverCanvas\r\n    this.clusterCanvasCxt = clusterCanvas.getContext('2d')\r\n    this.hoverCanvasCtx = hoverCanvas.getContext('2d')\r\n\r\n    this.layer = new AMap.CustomLayer(container, {\r\n      map,\r\n      zIndex,\r\n      visible,\r\n      zooms: [1, 20]\r\n    })\r\n  }\r\n  // 设备像素比\r\n  getPixelRatio() {\r\n    return Math.min(2, Math.round(window.devicePixelRatio || 1))\r\n  }\r\n  // 设置canvas的width&height属性可以清理画布\r\n  setCanvasSize(canvas, w, h) {\r\n    const pixelRatio = this.getPixelRatio();\r\n    canvas.width = w * pixelRatio;\r\n    canvas.height = h * pixelRatio;\r\n    canvas.style.width = w + 'px';\r\n    canvas.style.height = h + 'px';\r\n  }\r\n  // 清除聚合\r\n  clearCluster() {\r\n    const {\r\n      width,\r\n      height\r\n    } = this.options.map.getSize()\r\n    this.setCanvasSize(this.clusterCanvas, width, height)\r\n  }\r\n}\r\n\r\nexport default Canvas"," class ClusterItem {\r\n  constructor(point, options) {\r\n    this.coordinate = point.coordinate\r\n    this.points = [point]\r\n    this.options = options\r\n  }\r\n  getCount() {\r\n    return this.points.length\r\n  }\r\n  // 更新聚合点的中心点\r\n  updateCenter() {\r\n    const { points, points: { length }, coordinate: { x: centerX, y: centerY }, options: { isAverageCenter } } = this\r\n    if (isAverageCenter) {\r\n      const newAddPoint = points[length - 1]\r\n      const { coordinate: { x: pointX, y: pointY } } = newAddPoint\r\n      const totalX = centerX * (length - 1)\r\n      const totalY = centerY * (length - 1)\r\n      const newCenterX = (totalX + pointX) / length\r\n      const newCenterY = (totalY + pointY) / length\r\n      this.coordinate = {\r\n        x: newCenterX,\r\n        y: newCenterY\r\n      }\r\n    }\r\n  }\r\n  // 往聚合中添加点\r\n  addPoint(point) {\r\n    this.points.push(point)\r\n    this.updateCenter()\r\n  }\r\n  // 判断一个点是否在改聚合范围内\r\n  contains(point) {\r\n    const { coordinate: { x: pointX, y: pointY } } = point\r\n    const { coordinate: { x: centerX, y: centerY }, options: { gridSize } } = this\r\n    return pointX >= centerX - gridSize &&\r\n    pointX <= centerX + gridSize &&\r\n    pointY >= centerY - gridSize &&\r\n    pointY <= centerY + gridSize\r\n  }\r\n}\r\n\r\nexport default ClusterItem","//经纬度转墨卡托\r\nexport function lonLat2Mercator(lonLat) {\r\n  const [longitude, latitude] = lonLat\r\n  let x = (longitude * 20037508.34) / 180\r\n  let y =\r\n    Math.log(Math.tan(((90 + latitude) * Math.PI) / 360)) / (Math.PI / 180)\r\n  y = (y * 20037508.34) / 180\r\n  return {\r\n    x,\r\n    y\r\n  }\r\n}\r\n//墨卡托转经纬度\r\nexport function mercator2LonLat(pixel) {\r\n  const { x, y } = pixel\r\n  let longitude = (x / 20037508.34) * 180\r\n  let latitude = (y / 20037508.34) * 180\r\n  latitude =\r\n    (180 / Math.PI) *\r\n    (2 * Math.atan(Math.exp((latitude * Math.PI) / 180)) - Math.PI / 2)\r\n\r\n  return [longitude, latitude]\r\n}\r\n","import Canvas from './canvas'\r\nimport ClusterItem from './clusterItem'\r\nimport {\r\n  lonLat2Mercator,\r\n  mercator2LonLat\r\n} from './utils'\r\n\r\n// 开发环境输出日志\r\nconst debug = process.env.NODE_ENV === 'development'\r\n\r\n// 聚合策略\r\nexport const ClusterTypes = {\r\n  ZOOM: 'zoom', // 根据缩放层级聚合\r\n  PIXEL: 'pixel' // 根据相对于地图容器的坐标聚合\r\n}\r\n\r\n// 默认的点样式\r\nconst defaultStyle = {\r\n  width: 60,\r\n  height: 69\r\n}\r\n// 聚合默认设置\r\nconst defaultOptions = {\r\n  type: ClusterTypes.PIXEL, // 聚合策略\r\n  maxZoom: 18, // 最大的聚合级别，大于该级别就不进行相应的聚合\r\n  gridSize: 60, // 聚合计算时，网格的像素大小\r\n  minClusterSize: 2, // 聚合的最小数量，小于该数量个点则不能成为一个聚合\r\n  averageCenter: true, // 是否取所有点的平均值作为聚合点中心\r\n  zoomOnClick: true, // 点击聚合点时，是否展开聚合\r\n  zIndex: 120, // canvas图层的zindex\r\n  visible: true, // 是否显示\r\n  getPosition(item) {\r\n    // 获取经纬度信息\r\n    const {\r\n      location\r\n    } = item\r\n    return location ? [location.longitude, location.latitude] : null\r\n  },\r\n  render: null, // 绘制函数\r\n  hoverRender: null, // hover状态下的绘制函数\r\n  // 以下参数主要用于事件系统\r\n  clickHandler: null, // click事件\r\n  mouseoutHandler: null, // mouseout事件\r\n  mouseoverHandler: null, // mouseover事件\r\n  mousemoveHandler: null, // mousemove事件\r\n  normalPointStyle: defaultStyle, // 实体点的样式\r\n  clusterPointStyle: defaultStyle, // 聚合点的样式\r\n  hoverNormalPointStyle: defaultStyle, // hover状态下实体点的样式\r\n  hoverClusterPointStyle: defaultStyle // hover状态下聚合点的样式\r\n}\r\n\r\nclass Cluster {\r\n  constructor(options) {\r\n    const {\r\n      map,\r\n      data\r\n    } = options\r\n    this.options = Object.assign({}, defaultOptions, options)\r\n    this.points = [] // 聚合点+实体点 = 渲染点\r\n    this.buildFn = null // 聚合构建器\r\n    this.pixelFn = null // 还原点坐标到相对地图容器的坐标\r\n    this.lastPixel = {} // 触发事件的坐标\r\n    this.oldHoverPoint = null // 触发事件的对象\r\n    this.renderTimer = null\r\n    this.clusterItems = null\r\n    this.renderEngine = new Canvas({\r\n      map,\r\n      zIndex: this.options.zIndex,\r\n      visible: this.options.visible\r\n    })\r\n    this._init(data)\r\n    this._customEngine()\r\n    this._bindEvent()\r\n  }\r\n  renderLater(delay) {\r\n    if (!this.renderTimer) {\r\n      this.renderTimer = setTimeout(this.render.bind(this), delay || 50)\r\n    }\r\n  }\r\n  render() {\r\n    const {\r\n      points,\r\n      options: {\r\n        render,\r\n        normalPointStyle,\r\n        clusterPointStyle\r\n      },\r\n      renderEngine: {\r\n        clusterCanvasCxt\r\n      }\r\n    } = this\r\n    if (this.renderTimer) {\r\n      clearTimeout(this.renderTimer)\r\n      this.renderTimer = null\r\n    }\r\n    if (debug) {\r\n      console.time('绘制时间：')\r\n    }\r\n    // 清理画布\r\n    this.renderEngine.clearCluster()\r\n    // 绘制\r\n    points.forEach((point) => {\r\n      const pixel = this.pixelFn(point.coordinate)\r\n      const {\r\n        x,\r\n        y\r\n      } = pixel\r\n      const isCluster = this._isCluster(point)\r\n      const style = isCluster ? clusterPointStyle : normalPointStyle\r\n      const {\r\n        width,\r\n        height\r\n      } = style\r\n      // 定位到中心位置\r\n      render(clusterCanvasCxt, x - width / 2, y - height / 2, width, height, {\r\n        isCluster,\r\n        data: point\r\n      })\r\n    })\r\n    if (debug) {\r\n      console.timeEnd('绘制时间：')\r\n    }\r\n  }\r\n  setData(data) {\r\n    this.data = data\r\n    this._buildCluster()\r\n    this.render()\r\n  }\r\n  _init(data) {\r\n    // 根据聚合策略使用不同的聚合构建器\r\n    this._createBuildFn()\r\n    // 把聚合坐标还原为相对于地图容器的坐标\r\n    this._createPixelFn()\r\n    this.setData(data)\r\n  }\r\n  _createBuildFn() {\r\n    const {\r\n      options: {\r\n        map,\r\n        type,\r\n        gridSize,\r\n        averageCenter,\r\n        getPosition\r\n      }\r\n    } = this\r\n    if (type === ClusterTypes.PIXEL) {\r\n      this.buildFn = () => {\r\n        const bounds = map.getBounds()\r\n        const options = {\r\n          gridSize,\r\n          averageCenter\r\n        }\r\n        this.data.forEach((item) => {\r\n          const location = getPosition(item)\r\n          if (location && bounds.contains(location)) {\r\n            // 经纬度转换为相对于地图容器的坐标\r\n            item.coordinate = map.lngLatToContainer(location)\r\n            this._buildClusterItem(item, options)\r\n          }\r\n        })\r\n      }\r\n    } else {\r\n      this.buildFn = () => {\r\n        const zoom = map.getZoom()\r\n        const bounds = this._getExtendedBounds()\r\n        const options = {\r\n          averageCenter,\r\n          gridSize: gridSize * Math.pow(2, 18 - zoom)\r\n        }\r\n        this.data.forEach((item) => {\r\n          const location = getPosition(item)\r\n          // 反转经纬度的时候使用\r\n          if (location) {\r\n            // 经纬度转换为墨卡托坐标\r\n            if (!item.coordinate) {\r\n              item.coordinate = lonLat2Mercator(location)\r\n            }\r\n            if (this._pointInScreen(bounds, item.coordinate)) {\r\n              this._buildClusterItem(item, options)\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n  _createPixelFn() {\r\n    const {\r\n      options: {\r\n        type,\r\n        map\r\n      }\r\n    } = this\r\n    if (type === ClusterTypes.PIXEL) {\r\n      this.pixelFn = (coordinate) => coordinate\r\n    } else {\r\n      this.pixelFn = (coordinate) => {\r\n        // 墨卡托坐标=>经纬度\r\n        const lnglat = mercator2LonLat(coordinate)\r\n        // 经纬度=>相对地图容器的坐标\r\n        return map.lngLatToContainer(lnglat)\r\n      }\r\n    }\r\n  }\r\n  _buildCluster() {\r\n    if (debug) {\r\n      console.time('聚合构建时间：')\r\n    }\r\n    this.clusterItems = []\r\n    if (this.data) {\r\n      this.buildFn()\r\n      this._updatePoints()\r\n      this.render()\r\n    }\r\n    if (debug) {\r\n      console.timeEnd('聚合构建时间：')\r\n      console.log('%c构建聚合模块数量：' + this.points.length, 'color: red')\r\n    }\r\n  }\r\n  _buildClusterItem(point, options) {\r\n    let parent = null\r\n    let distance = -1 // 当前点与聚合中心的距离\r\n    const {\r\n      coordinate: {\r\n        x: pointX,\r\n        y: pointY\r\n      }\r\n    } = point\r\n    this.clusterItems.forEach((clusterItem) => {\r\n      if (clusterItem.contains(point)) {\r\n        const {\r\n          coordinate: {\r\n            x: centerX,\r\n            y: centerY\r\n          }\r\n        } = clusterItem\r\n        const currDistance =\r\n          Math.pow(pointX - centerX, 2) + Math.pow(pointY - centerY, 2)\r\n        if (distance < 0 || distance > currDistance) {\r\n          // 取距离最近的一个聚合\r\n          parent = clusterItem\r\n          distance = currDistance\r\n        }\r\n      }\r\n    })\r\n    if (parent) {\r\n      // 该点找到聚合对象\r\n      parent.addPoint(point)\r\n    } else {\r\n      // 以该点为中心创建一个聚合对象\r\n      const clusterItem = new ClusterItem(point, options)\r\n      this.clusterItems.push(clusterItem)\r\n    }\r\n  }\r\n  _updatePoints() {\r\n    const {\r\n      clusterItems,\r\n      options: {\r\n        map,\r\n        minClusterSize,\r\n        maxZoom\r\n      }\r\n    } = this\r\n    if (map.getZoom() >= maxZoom) {\r\n      // 地图放大最大层级，就不存在聚合点了\r\n      this.points = clusterItems.reduce(\r\n        (pre, curr) => pre.concat(curr.points), []\r\n      )\r\n    } else {\r\n      // 返回的点数据应该是聚合点+实体点\r\n      let points = []\r\n      clusterItems.forEach((clusterItem) => {\r\n        if (clusterItem.getCount() >= minClusterSize) {\r\n          // 聚合点\r\n          points.push(clusterItem)\r\n        } else {\r\n          // 实体点\r\n          points = points.concat(clusterItem.points)\r\n        }\r\n      })\r\n      this.points = points\r\n    }\r\n  }\r\n  _customEngine() {\r\n    // 重要：当图层发生变动时，自动调用render函数\r\n    this.renderEngine.layer.render = this._buildCluster.bind(this)\r\n  }\r\n  _bindEvent() {\r\n    const {\r\n      options: {\r\n        map\r\n      }\r\n    } = this\r\n    // 更新视图\r\n    // map.on('moveend', this._buildCluster.bind(this))\r\n    // map.on('zoomchange', this._buildCluster.bind(this))\r\n    // 实现canvas事件\r\n    map.on('click', this._clickHandler.bind(this)) // => point click 事件\r\n    map.on('mousemove', this._mousemoveHandler.bind(this)) // => point hover 事件\r\n  }\r\n  _clickHandler(event) {\r\n    const {\r\n      pixel\r\n    } = event\r\n    const point = this._findEventPoint(pixel)\r\n    if (point) {\r\n      const {\r\n        options: {\r\n          zoomOnClick,\r\n          clickHandler\r\n        }\r\n      } = this\r\n      const params = {\r\n        data: point,\r\n        isCluster: this._isCluster(point)\r\n      }\r\n      // 触发 `mouseout`\r\n      this.mouseoutHandler()\r\n      // 点击聚合点展开聚合\r\n      zoomOnClick && this._zoomOnClickHandler(params)\r\n      this._isFunction(clickHandler) && clickHandler(params)\r\n    }\r\n  }\r\n  // 由`mousemove`衍生出 `mouseout` & `mouseover`\r\n  _mousemoveHandler(event) {\r\n    const {\r\n      pixel\r\n    } = event\r\n    const {\r\n      lastPixel,\r\n      oldHoverPoint\r\n    } = this\r\n    if (lastPixel.x === pixel.x && lastPixel.y === pixel.y) {\r\n      return\r\n    }\r\n    const point = this._findEventPoint(pixel)\r\n    if (point === oldHoverPoint) {\r\n      return\r\n    }\r\n    this.mouseoutHandler(point)\r\n    this.mouseoverHandler(point)\r\n    this.lastPixel = pixel\r\n  }\r\n  mouseoutHandler(point) {\r\n    const {\r\n      oldHoverPoint,\r\n      options: {\r\n        mouseoutHandler\r\n      }\r\n    } = this\r\n    if (oldHoverPoint) {\r\n      this._clearHoverPoint()\r\n      this._isFunction(mouseoutHandler) &&\r\n        mouseoutHandler({\r\n          data: oldHoverPoint,\r\n          isCluster: this._isCluster(oldHoverPoint)\r\n        })\r\n    }\r\n    this.oldHoverPoint = point\r\n  }\r\n  mouseoverHandler(point) {\r\n    if (!point) {\r\n      return\r\n    }\r\n    const {\r\n      options: {\r\n        mouseoverHandler\r\n      }\r\n    } = this\r\n    const params = {\r\n      data: point,\r\n      isCluster: this._isCluster(point)\r\n    }\r\n    this._drawHoverPoint(params)\r\n    this._isFunction(mouseoverHandler) && mouseoverHandler(params)\r\n  }\r\n  _zoomOnClickHandler(data) {\r\n    const {\r\n      isCluster,\r\n      data: {\r\n        coordinate\r\n      }\r\n    } = data\r\n    if (isCluster) {\r\n      const {\r\n        options: {\r\n          map\r\n        },\r\n        pixelFn\r\n      } = this\r\n      const pixel = pixelFn(coordinate)\r\n      const lnglat = map.containerToLngLat(pixel)\r\n      map.setCenter(lnglat)\r\n      map.zoomIn()\r\n    }\r\n  }\r\n  _drawHoverPoint(params) {\r\n    const {\r\n      options: {\r\n        hoverRender,\r\n        normalPointStyle,\r\n        clusterPointStyle\r\n      },\r\n      renderEngine,\r\n      renderEngine: {\r\n        hoverCanvas,\r\n        hoverCanvasCtx\r\n      }\r\n    } = this\r\n    if (this._isFunction(hoverRender)) {\r\n      const margin = 20\r\n      const {\r\n        isCluster,\r\n        data: {\r\n          coordinate: {\r\n            x,\r\n            y\r\n          }\r\n        }\r\n      } = params\r\n      const style = isCluster ? clusterPointStyle : normalPointStyle\r\n      const {\r\n        width,\r\n        height\r\n      } = style\r\n      const canvasWidth = width + margin\r\n      const canvasHeight = height + margin\r\n      const canvasLeft = x - canvasWidth / 2\r\n      const canvasTop = y - canvasHeight / 2\r\n      const pixelRatio = renderEngine.getPixelRatio()\r\n      hoverCanvas.style.left = canvasLeft + 'px'\r\n      hoverCanvas.style.top = canvasTop + 'px'\r\n      hoverCanvas.style.cursor = 'pointer'\r\n      renderEngine.setCanvasSize(hoverCanvas, canvasWidth, canvasHeight)\r\n      hoverCanvasCtx.save()\r\n      hoverCanvasCtx.translate(-canvasLeft * pixelRatio, -canvasTop * pixelRatio)\r\n      hoverRender(\r\n        hoverCanvasCtx,\r\n        canvasLeft + margin / 2,\r\n        canvasTop + margin / 2,\r\n        width,\r\n        height,\r\n        params\r\n      )\r\n      hoverCanvasCtx.restore()\r\n    }\r\n  }\r\n  _clearHoverPoint() {\r\n    const {\r\n      renderEngine,\r\n      renderEngine: {\r\n        hoverCanvas\r\n      }\r\n    } = this\r\n    renderEngine.setCanvasSize(hoverCanvas, 0, 0)\r\n  }\r\n  _findEventPoint(mousePoint) {\r\n    // 查找鼠标下面的点，因为聚合点跟实体点的大小可能不一致，所以要分开查找\r\n    const {\r\n      points,\r\n      _constains,\r\n      options: {\r\n        normalPointStyle,\r\n        clusterPointStyle\r\n      }\r\n    } = this\r\n    const _clusterPoints = []\r\n    const _normalPoints = []\r\n    points.forEach((item) => {\r\n      if (this._isCluster(item)) {\r\n        _clusterPoints.push(item)\r\n      } else {\r\n        _normalPoints.push(item)\r\n      }\r\n    })\r\n    for (let i = 0, len1 = _clusterPoints.length; i < len1; i++) {\r\n      const item = _clusterPoints[i]\r\n      if (_constains(item.coordinate, mousePoint, clusterPointStyle)) {\r\n        return item\r\n      }\r\n    }\r\n    for (let k = 0, len2 = _normalPoints.length; k < len2; k++) {\r\n      const item = _normalPoints[k]\r\n      if (_constains(item.coordinate, mousePoint, normalPointStyle)) {\r\n        return item\r\n      }\r\n    }\r\n    return null\r\n  }\r\n  _constains(p1, p2, style) {\r\n    // 绘画的时候是以 `p1` 作为中心点\r\n    const {\r\n      width,\r\n      height\r\n    } = style\r\n    const {\r\n      x: x1,\r\n      y: y1\r\n    } = p1\r\n    const {\r\n      x: x2,\r\n      y: y2\r\n    } = p2\r\n    return (\r\n      x2 >= x1 - width / 2 &&\r\n      x2 <= x1 + width / 2 &&\r\n      y2 >= y1 - height / 2 &&\r\n      y2 <= y1 + height / 2\r\n    )\r\n  }\r\n  _getExtendedBounds() {\r\n    const {\r\n      options: {\r\n        map,\r\n        gridSize\r\n      }\r\n    } = this\r\n    const zoom = map.getZoom()\r\n    const bounds = map.getBounds()\r\n    const southWest = bounds.getSouthWest()\r\n    const northEast = bounds.getNorthEast()\r\n    // 上右\r\n    const tr = lonLat2Mercator([southWest.lng, southWest.lat])\r\n    // 下左\r\n    const bl = lonLat2Mercator([northEast.lng, northEast.lat])\r\n    const _gridSize = gridSize * Math.pow(2, 18 - zoom)\r\n    tr.x -= _gridSize\r\n    tr.y -= _gridSize\r\n    bl.x += _gridSize\r\n    bl.y += _gridSize\r\n    return [tr, bl]\r\n  }\r\n  _pointInScreen(bounds, coordinate) {\r\n    const [tr, bl] = bounds\r\n    const {\r\n      x,\r\n      y\r\n    } = coordinate\r\n    return bl.x <= 0 || x >= tr.x && x <= bl.x && y >= tr.y && y <= bl.y\r\n  }\r\n  _isFunction(fn) {\r\n    return typeof fn === 'function'\r\n  }\r\n  _isCluster(point) {\r\n    return point instanceof ClusterItem\r\n  }\r\n}\r\n\r\nexport default Cluster","// import Cluster from './lib/cluster'\r\nimport Cluster from '../src/cluster'\r\n\r\nfunction drawCircle(ctx, x, y, r, color = 'red') {\r\n  ctx.fillStyle = color\r\n  ctx.beginPath()\r\n  ctx.arc(x, y, r, 0, Math.PI * 2)\r\n  ctx.fill()\r\n}\r\n\r\nfunction drawText(ctx, x, y, text, color = 'white') {\r\n  ctx.font = '18px SimHei'\r\n  ctx.textAlign = 'center'\r\n  ctx.textBaseline = 'middle'\r\n  ctx.fillStyle = color\r\n  ctx.fillText(text, x, y)\r\n}\r\n\r\nfunction random(basic, offset) {\r\n  let change = Math.random() * offset\r\n  change = Math.random() > 0.5 ? change : -change\r\n  return basic + change\r\n}\r\n\r\nconst data = []\r\nconst longitude = 117.000923\r\nconst latitude = 36.675807\r\nfor (let i = 0; i < 100000; i++) {\r\n  data.push([random(longitude, 5), random(latitude, 5)])\r\n}\r\nconst map = new AMap.Map('container', {\r\n  zoom: 11,\r\n  center: [longitude, latitude]\r\n})\r\n// `cluster` 依赖 `AMap.CustomLayer`\r\nAMap.plugin('AMap.CustomLayer', function () {\r\n  const cluster = new Cluster({\r\n    map,\r\n    data,\r\n    type: 'zoom',\r\n    getPosition: (item) => item,\r\n    render(ctx, x, y, width, height, point) {\r\n      const {\r\n        isCluster,\r\n        data\r\n      } = point\r\n      if (isCluster) {\r\n        drawCircle(ctx, x, y, width / 2)\r\n        drawText(ctx, x, y, data.getCount())\r\n      } else {\r\n        drawCircle(ctx, x, y, width / 6, 'green')\r\n      }\r\n    }\r\n  })\r\n  window.cluster = cluster\r\n})"],"names":["Canvas","options","layer","hoverCanvas","hoverCanvasCtx","clusterCanvas","clusterCanvasCxt","_init","map","visible","zIndex","container","document","createElement","style","position","appendChild","getContext","AMap","CustomLayer","zooms","Math","min","round","window","devicePixelRatio","canvas","w","h","pixelRatio","getPixelRatio","width","height","getSize","setCanvasSize","ClusterItem","point","coordinate","points","length","centerX","x","centerY","y","isAverageCenter","newAddPoint","pointX","pointY","totalX","totalY","newCenterX","newCenterY","push","updateCenter","gridSize","lonLat2Mercator","lonLat","longitude","latitude","log","tan","PI","mercator2LonLat","pixel","atan","exp","ClusterTypes","ZOOM","PIXEL","defaultStyle","defaultOptions","type","maxZoom","minClusterSize","averageCenter","zoomOnClick","getPosition","item","location","render","hoverRender","clickHandler","mouseoutHandler","mouseoverHandler","mousemoveHandler","normalPointStyle","clusterPointStyle","hoverNormalPointStyle","hoverClusterPointStyle","Cluster","data","Object","assign","buildFn","pixelFn","lastPixel","oldHoverPoint","renderTimer","clusterItems","renderEngine","_customEngine","_bindEvent","delay","setTimeout","bind","clearTimeout","console","time","clearCluster","forEach","isCluster","_isCluster","timeEnd","_buildCluster","_createBuildFn","_createPixelFn","setData","bounds","getBounds","contains","lngLatToContainer","_buildClusterItem","zoom","getZoom","_getExtendedBounds","pow","_pointInScreen","lnglat","_updatePoints","parent","distance","clusterItem","currDistance","addPoint","reduce","pre","curr","concat","getCount","on","_clickHandler","_mousemoveHandler","event","_findEventPoint","params","_zoomOnClickHandler","_isFunction","_clearHoverPoint","_drawHoverPoint","containerToLngLat","setCenter","zoomIn","margin","canvasWidth","canvasHeight","canvasLeft","canvasTop","left","top","cursor","save","translate","restore","mousePoint","_constains","_clusterPoints","_normalPoints","i","len1","k","len2","p1","p2","x1","y1","x2","y2","southWest","getSouthWest","northEast","getNorthEast","tr","lng","lat","bl","_gridSize","fn","drawCircle","ctx","r","color","fillStyle","beginPath","arc","fill","drawText","text","font","textAlign","textBaseline","fillText","random","basic","offset","change","Map","center","plugin","cluster"],"mappings":"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"}